!function(){"use strict";window.DD=window.DD||{},window.DD.bp=function(){var n,e,t,i,r,o,a,s,p,m,u,f,x,c,d,h={isResponsive:!0,baseFontSize:16,breakpoints:[{name:"xxs",px:359},{name:"xs",px:480},{name:"s",px:640},{name:"m",px:768},{name:"l",px:1024},{name:"xl",px:1244},{name:"xxl",px:1410}],staticRange:{min:0,max:"xl"}};return t=function(){var t=h.breakpoints.sort(function(n,e){return n.px<e.px?-1:n.px>e.px?1:0});n={},e={};for(var i=0,r=t.length,o=r-1;r>i;i+=1)n[t[i].name]=parseInt(t[i].px,10),o>i&&(e[t[i].name]=parseInt(t[i+1].px-1,10))},t(),i=function(n,e){var t,i=function(n){return"string"==typeof n&&(n=n.replace(/\s/g,""),/^\d+$/.test(n)&&(n=parseInt(n,10))),n},r=n,o=e||0;return"string"==typeof n&&-1!==n.indexOf(",")&&0===o&&(t=n.split(","),2===t.length&&(r=t[0],o=t[1])),{min:i(r),max:i(o)}},r=function(n){return n/h.baseFontSize},o=function(t,i){if("number"==typeof t)return r(t);var o=i===!0?e:n,a="0";for(var s in o)o.hasOwnProperty(s)&&t===s.toLowerCase()&&(a=r(o[s]));return"0"===a&&console.warn("DD.bp: Breakpoint '"+t+"' doesn't exist - replacing with 0"),a},a=function(n,e,t){if("string"!=typeof t&&(t="width"),"width"!==t)return!1;var r=o(h.staticRange.min),a=o(h.staticRange.max,!0),s=i(n,e),p=o(s.min),m=o(s.max);return 0===s.max?p>=r&&a>p?!0:!1:0===s.min?m>=a?!0:!1:p>a||r>m?!1:a>m?!1:!0},s=function(n,e){var t=o(n),i="string"==typeof e?e:"width";return"(min-"+i+": "+t+"em)"},p=function(n,e){var t=o(n,!0),i="string"==typeof e?e:"width";return"(max-"+i+": "+t+"em)"},m=function(n,e,t){var i=o(n),r=o(e,!0),a="string"==typeof t?t:"width";return"(min-"+a+": "+i+"em) and (max-"+a+": "+r+"em)"},u=function(n,e,t){var r=i(n,e),o=r.min,a=r.max;return"string"!=typeof t&&(t="width"),"retina"===o||"hdpi"===o?"(-webkit-min-device-pixel-ratio: 1.5), (min--moz-device-pixel-ratio: 1.5), (-o-min-device-pixel-ratio: 3/2), (min-device-pixel-ratio: 1.5)":0===a?s(o,t):0===o?p(a,t):m(o,a,t)},f=function(n,e){return u(n,e,"height")},x=function(n,e,t){return h.isResponsive===!1?a(n,e,t):window.matchMedia?window.matchMedia(u(n,e,t)).matches:(console.warn("DD.bp: Match Media not supported by this browser. Consider adding a polyfill."),!1)},c=function(n,e){return x(n,e,"height")},d=function(n){if("boolean"==typeof n.isResponsive&&(h.isResponsive=n.isResponsive),"number"==typeof n.baseFontSize&&(h.baseFontSize=n.baseFontSize),"object"==typeof n.breakpoints&&n.breakpoints.length>0){for(var e=!0,i=n.breakpoints,r=0,o=i.length;o>r;r+=1)(i[r].hasOwnProperty("name")&&i[r].hasOwnProperty("px"))===!1&&(e=!1);if(!e)return console.warn("DD.bp: Invalid breakpoints array entered. Please use the format {name: 'string', px: number}"),!1;h.breakpoints=n.breakpoints,t()}return!0},{get:u,getHeight:f,is:x,isHeight:c,options:d}}()}();
//# sourceMappingURL=data:application/json;base64,
